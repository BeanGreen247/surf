/* This file is generated by glib-genmarshal, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */
#ifndef ___GCR_MARSHAL_MARSHAL_H__
#define ___GCR_MARSHAL_MARSHAL_H__

#include <glib-object.h>

G_BEGIN_DECLS

/* BOOLEAN:INT (gcr/gcr-marshal.list:1) */
extern
void _gcr_marshal_BOOLEAN__INT (GClosure     *closure,
                                GValue       *return_value,
                                guint         n_param_values,
                                const GValue *param_values,
                                gpointer      invocation_hint,
                                gpointer      marshal_data);

/* BOOLEAN:BOXED (gcr/gcr-marshal.list:2) */
extern
void _gcr_marshal_BOOLEAN__BOXED (GClosure     *closure,
                                  GValue       *return_value,
                                  guint         n_param_values,
                                  const GValue *param_values,
                                  gpointer      invocation_hint,
                                  gpointer      marshal_data);

/* OBJECT:VOID (gcr/gcr-marshal.list:3) */
extern
void _gcr_marshal_OBJECT__VOID (GClosure     *closure,
                                GValue       *return_value,
                                guint         n_param_values,
                                const GValue *param_values,
                                gpointer      invocation_hint,
                                gpointer      marshal_data);

/* VOID:STRING,BOXED (gcr/gcr-marshal.list:4) */
extern
void _gcr_marshal_VOID__STRING_BOXED (GClosure     *closure,
                                      GValue       *return_value,
                                      guint         n_param_values,
                                      const GValue *param_values,
                                      gpointer      invocation_hint,
                                      gpointer      marshal_data);

/* VOID:BOXED (gcr/gcr-marshal.list:5) */
#define _gcr_marshal_VOID__BOXED	g_cclosure_marshal_VOID__BOXED

/* VOID:STRING (gcr/gcr-marshal.list:6) */
#define _gcr_marshal_VOID__STRING	g_cclosure_marshal_VOID__STRING

/* VOID:OBJECT,BOXED (gcr/gcr-marshal.list:7) */
extern
void _gcr_marshal_VOID__OBJECT_BOXED (GClosure     *closure,
                                      GValue       *return_value,
                                      guint         n_param_values,
                                      const GValue *param_values,
                                      gpointer      invocation_hint,
                                      gpointer      marshal_data);

/* VOID:OBJECT,OBJECT (gcr/gcr-marshal.list:8) */
extern
void _gcr_marshal_VOID__OBJECT_OBJECT (GClosure     *closure,
                                       GValue       *return_value,
                                       guint         n_param_values,
                                       const GValue *param_values,
                                       gpointer      invocation_hint,
                                       gpointer      marshal_data);


G_END_DECLS

#endif /* ___GCR_MARSHAL_MARSHAL_H__ */

/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __GCR_GCR_DBUS_GENERATED_H__
#define __GCR_GCR_DBUS_GENERATED_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.keyring.internal.Prompter */

#define GCR_DBUS_TYPE_PROMPTER (_gcr_dbus_prompter_get_type ())
#define GCR_DBUS_PROMPTER(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GCR_DBUS_TYPE_PROMPTER, GcrDBusPrompter))
#define GCR_DBUS_IS_PROMPTER(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GCR_DBUS_TYPE_PROMPTER))
#define GCR_DBUS_PROMPTER_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GCR_DBUS_TYPE_PROMPTER, GcrDBusPrompterIface))

struct _GcrDBusPrompter;
typedef struct _GcrDBusPrompter GcrDBusPrompter;
typedef struct _GcrDBusPrompterIface GcrDBusPrompterIface;

struct _GcrDBusPrompterIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_begin_prompting) (
    GcrDBusPrompter *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_callback);

  gboolean (*handle_perform_prompt) (
    GcrDBusPrompter *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_callback,
    const gchar *arg_type,
    GVariant *arg_properties,
    const gchar *arg_exchange);

  gboolean (*handle_stop_prompting) (
    GcrDBusPrompter *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_callback);

};

GType _gcr_dbus_prompter_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *_gcr_dbus_prompter_interface_info (void);
guint _gcr_dbus_prompter_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void _gcr_dbus_prompter_complete_begin_prompting (
    GcrDBusPrompter *object,
    GDBusMethodInvocation *invocation);

void _gcr_dbus_prompter_complete_perform_prompt (
    GcrDBusPrompter *object,
    GDBusMethodInvocation *invocation);

void _gcr_dbus_prompter_complete_stop_prompting (
    GcrDBusPrompter *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void _gcr_dbus_prompter_call_begin_prompting (
    GcrDBusPrompter *proxy,
    const gchar *arg_callback,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _gcr_dbus_prompter_call_begin_prompting_finish (
    GcrDBusPrompter *proxy,
    GAsyncResult *res,
    GError **error);

gboolean _gcr_dbus_prompter_call_begin_prompting_sync (
    GcrDBusPrompter *proxy,
    const gchar *arg_callback,
    GCancellable *cancellable,
    GError **error);

void _gcr_dbus_prompter_call_perform_prompt (
    GcrDBusPrompter *proxy,
    const gchar *arg_callback,
    const gchar *arg_type,
    GVariant *arg_properties,
    const gchar *arg_exchange,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _gcr_dbus_prompter_call_perform_prompt_finish (
    GcrDBusPrompter *proxy,
    GAsyncResult *res,
    GError **error);

gboolean _gcr_dbus_prompter_call_perform_prompt_sync (
    GcrDBusPrompter *proxy,
    const gchar *arg_callback,
    const gchar *arg_type,
    GVariant *arg_properties,
    const gchar *arg_exchange,
    GCancellable *cancellable,
    GError **error);

void _gcr_dbus_prompter_call_stop_prompting (
    GcrDBusPrompter *proxy,
    const gchar *arg_callback,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _gcr_dbus_prompter_call_stop_prompting_finish (
    GcrDBusPrompter *proxy,
    GAsyncResult *res,
    GError **error);

gboolean _gcr_dbus_prompter_call_stop_prompting_sync (
    GcrDBusPrompter *proxy,
    const gchar *arg_callback,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define GCR_DBUS_TYPE_PROMPTER_PROXY (_gcr_dbus_prompter_proxy_get_type ())
#define GCR_DBUS_PROMPTER_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GCR_DBUS_TYPE_PROMPTER_PROXY, GcrDBusPrompterProxy))
#define GCR_DBUS_PROMPTER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GCR_DBUS_TYPE_PROMPTER_PROXY, GcrDBusPrompterProxyClass))
#define GCR_DBUS_PROMPTER_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GCR_DBUS_TYPE_PROMPTER_PROXY, GcrDBusPrompterProxyClass))
#define GCR_DBUS_IS_PROMPTER_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GCR_DBUS_TYPE_PROMPTER_PROXY))
#define GCR_DBUS_IS_PROMPTER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GCR_DBUS_TYPE_PROMPTER_PROXY))

typedef struct _GcrDBusPrompterProxy GcrDBusPrompterProxy;
typedef struct _GcrDBusPrompterProxyClass GcrDBusPrompterProxyClass;
typedef struct _GcrDBusPrompterProxyPrivate GcrDBusPrompterProxyPrivate;

struct _GcrDBusPrompterProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  GcrDBusPrompterProxyPrivate *priv;
};

struct _GcrDBusPrompterProxyClass
{
  GDBusProxyClass parent_class;
};

GType _gcr_dbus_prompter_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GcrDBusPrompterProxy, g_object_unref)
#endif

void _gcr_dbus_prompter_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GcrDBusPrompter *_gcr_dbus_prompter_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
GcrDBusPrompter *_gcr_dbus_prompter_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void _gcr_dbus_prompter_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GcrDBusPrompter *_gcr_dbus_prompter_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
GcrDBusPrompter *_gcr_dbus_prompter_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define GCR_DBUS_TYPE_PROMPTER_SKELETON (_gcr_dbus_prompter_skeleton_get_type ())
#define GCR_DBUS_PROMPTER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GCR_DBUS_TYPE_PROMPTER_SKELETON, GcrDBusPrompterSkeleton))
#define GCR_DBUS_PROMPTER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GCR_DBUS_TYPE_PROMPTER_SKELETON, GcrDBusPrompterSkeletonClass))
#define GCR_DBUS_PROMPTER_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GCR_DBUS_TYPE_PROMPTER_SKELETON, GcrDBusPrompterSkeletonClass))
#define GCR_DBUS_IS_PROMPTER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GCR_DBUS_TYPE_PROMPTER_SKELETON))
#define GCR_DBUS_IS_PROMPTER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GCR_DBUS_TYPE_PROMPTER_SKELETON))

typedef struct _GcrDBusPrompterSkeleton GcrDBusPrompterSkeleton;
typedef struct _GcrDBusPrompterSkeletonClass GcrDBusPrompterSkeletonClass;
typedef struct _GcrDBusPrompterSkeletonPrivate GcrDBusPrompterSkeletonPrivate;

struct _GcrDBusPrompterSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  GcrDBusPrompterSkeletonPrivate *priv;
};

struct _GcrDBusPrompterSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType _gcr_dbus_prompter_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GcrDBusPrompterSkeleton, g_object_unref)
#endif

GcrDBusPrompter *_gcr_dbus_prompter_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.keyring.internal.Prompter.Callback */

#define GCR_DBUS_TYPE_PROMPTER_CALLBACK (_gcr_dbus_prompter_callback_get_type ())
#define GCR_DBUS_PROMPTER_CALLBACK(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GCR_DBUS_TYPE_PROMPTER_CALLBACK, GcrDBusPrompterCallback))
#define GCR_DBUS_IS_PROMPTER_CALLBACK(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GCR_DBUS_TYPE_PROMPTER_CALLBACK))
#define GCR_DBUS_PROMPTER_CALLBACK_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GCR_DBUS_TYPE_PROMPTER_CALLBACK, GcrDBusPrompterCallbackIface))

struct _GcrDBusPrompterCallback;
typedef struct _GcrDBusPrompterCallback GcrDBusPrompterCallback;
typedef struct _GcrDBusPrompterCallbackIface GcrDBusPrompterCallbackIface;

struct _GcrDBusPrompterCallbackIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_prompt_done) (
    GcrDBusPrompterCallback *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_prompt_ready) (
    GcrDBusPrompterCallback *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_reply,
    GVariant *arg_properties,
    const gchar *arg_exchange);

};

GType _gcr_dbus_prompter_callback_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *_gcr_dbus_prompter_callback_interface_info (void);
guint _gcr_dbus_prompter_callback_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void _gcr_dbus_prompter_callback_complete_prompt_ready (
    GcrDBusPrompterCallback *object,
    GDBusMethodInvocation *invocation);

void _gcr_dbus_prompter_callback_complete_prompt_done (
    GcrDBusPrompterCallback *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void _gcr_dbus_prompter_callback_call_prompt_ready (
    GcrDBusPrompterCallback *proxy,
    const gchar *arg_reply,
    GVariant *arg_properties,
    const gchar *arg_exchange,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _gcr_dbus_prompter_callback_call_prompt_ready_finish (
    GcrDBusPrompterCallback *proxy,
    GAsyncResult *res,
    GError **error);

gboolean _gcr_dbus_prompter_callback_call_prompt_ready_sync (
    GcrDBusPrompterCallback *proxy,
    const gchar *arg_reply,
    GVariant *arg_properties,
    const gchar *arg_exchange,
    GCancellable *cancellable,
    GError **error);

void _gcr_dbus_prompter_callback_call_prompt_done (
    GcrDBusPrompterCallback *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _gcr_dbus_prompter_callback_call_prompt_done_finish (
    GcrDBusPrompterCallback *proxy,
    GAsyncResult *res,
    GError **error);

gboolean _gcr_dbus_prompter_callback_call_prompt_done_sync (
    GcrDBusPrompterCallback *proxy,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define GCR_DBUS_TYPE_PROMPTER_CALLBACK_PROXY (_gcr_dbus_prompter_callback_proxy_get_type ())
#define GCR_DBUS_PROMPTER_CALLBACK_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GCR_DBUS_TYPE_PROMPTER_CALLBACK_PROXY, GcrDBusPrompterCallbackProxy))
#define GCR_DBUS_PROMPTER_CALLBACK_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GCR_DBUS_TYPE_PROMPTER_CALLBACK_PROXY, GcrDBusPrompterCallbackProxyClass))
#define GCR_DBUS_PROMPTER_CALLBACK_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GCR_DBUS_TYPE_PROMPTER_CALLBACK_PROXY, GcrDBusPrompterCallbackProxyClass))
#define GCR_DBUS_IS_PROMPTER_CALLBACK_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GCR_DBUS_TYPE_PROMPTER_CALLBACK_PROXY))
#define GCR_DBUS_IS_PROMPTER_CALLBACK_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GCR_DBUS_TYPE_PROMPTER_CALLBACK_PROXY))

typedef struct _GcrDBusPrompterCallbackProxy GcrDBusPrompterCallbackProxy;
typedef struct _GcrDBusPrompterCallbackProxyClass GcrDBusPrompterCallbackProxyClass;
typedef struct _GcrDBusPrompterCallbackProxyPrivate GcrDBusPrompterCallbackProxyPrivate;

struct _GcrDBusPrompterCallbackProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  GcrDBusPrompterCallbackProxyPrivate *priv;
};

struct _GcrDBusPrompterCallbackProxyClass
{
  GDBusProxyClass parent_class;
};

GType _gcr_dbus_prompter_callback_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GcrDBusPrompterCallbackProxy, g_object_unref)
#endif

void _gcr_dbus_prompter_callback_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GcrDBusPrompterCallback *_gcr_dbus_prompter_callback_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
GcrDBusPrompterCallback *_gcr_dbus_prompter_callback_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void _gcr_dbus_prompter_callback_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GcrDBusPrompterCallback *_gcr_dbus_prompter_callback_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
GcrDBusPrompterCallback *_gcr_dbus_prompter_callback_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define GCR_DBUS_TYPE_PROMPTER_CALLBACK_SKELETON (_gcr_dbus_prompter_callback_skeleton_get_type ())
#define GCR_DBUS_PROMPTER_CALLBACK_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GCR_DBUS_TYPE_PROMPTER_CALLBACK_SKELETON, GcrDBusPrompterCallbackSkeleton))
#define GCR_DBUS_PROMPTER_CALLBACK_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GCR_DBUS_TYPE_PROMPTER_CALLBACK_SKELETON, GcrDBusPrompterCallbackSkeletonClass))
#define GCR_DBUS_PROMPTER_CALLBACK_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GCR_DBUS_TYPE_PROMPTER_CALLBACK_SKELETON, GcrDBusPrompterCallbackSkeletonClass))
#define GCR_DBUS_IS_PROMPTER_CALLBACK_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GCR_DBUS_TYPE_PROMPTER_CALLBACK_SKELETON))
#define GCR_DBUS_IS_PROMPTER_CALLBACK_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GCR_DBUS_TYPE_PROMPTER_CALLBACK_SKELETON))

typedef struct _GcrDBusPrompterCallbackSkeleton GcrDBusPrompterCallbackSkeleton;
typedef struct _GcrDBusPrompterCallbackSkeletonClass GcrDBusPrompterCallbackSkeletonClass;
typedef struct _GcrDBusPrompterCallbackSkeletonPrivate GcrDBusPrompterCallbackSkeletonPrivate;

struct _GcrDBusPrompterCallbackSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  GcrDBusPrompterCallbackSkeletonPrivate *priv;
};

struct _GcrDBusPrompterCallbackSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType _gcr_dbus_prompter_callback_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GcrDBusPrompterCallbackSkeleton, g_object_unref)
#endif

GcrDBusPrompterCallback *_gcr_dbus_prompter_callback_skeleton_new (void);


G_END_DECLS

#endif /* __GCR_GCR_DBUS_GENERATED_H__ */
